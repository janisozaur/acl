dist: trusty
sudo: required

language: cpp

cache: ccache

matrix:
  include:
    # Linux gcc5
    - os: linux
      env: COMPILER=gcc5 PACKAGES="g++-5 g++-5-multilib g++-multilib ccache"

    # Linux gcc6
    - os: linux
      env: COMPILER=gcc6 PACKAGES="g++-6 g++-6-multilib g++-multilib ccache"

    # Linux gcc7
    - os: linux
      env: COMPILER=gcc7 PACKAGES="g++-7 g++-7-multilib g++-multilib ccache"

    # Linux gcc8
    - os: linux
      env: COMPILER=gcc8 PACKAGES="g++-8 g++-8-multilib g++-multilib ccache"

    # Linux clang4
    - os: linux
      env: COMPILER=clang4 PACKAGES="clang-4.0 libstdc++-5-dev libc6-dev-i386 g++-5-multilib g++-multilib ccache"

    # Linux clang5
    - os: linux
      env: COMPILER=clang5 PACKAGES="clang-5.0 libstdc++-5-dev libc6-dev-i386 g++-5-multilib g++-multilib ccache"

    # Linux clang6
    - os: linux
      env: COMPILER=clang6 PACKAGES="clang-6.0 libstdc++-5-dev libc6-dev-i386 g++-5-multilib g++-multilib ccache"

    # OS X xcode8
    - os: osx
      osx_image: xcode8.3
      env: COMPILER=osx

    # OS X xcode9
    - os: osx
      osx_image: xcode9.4
      env: COMPILER=osx

before_install:
    - if [ "$COMPILER" = "clang4" ]; then curl -sSL "http://apt.llvm.org/llvm-snapshot.gpg.key" | sudo -E apt-key add - ; fi
    - if [ "$COMPILER" = "clang4" ]; then echo "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main" | sudo tee -a /etc/apt/sources.list > /dev/null ; fi
    - if [ "$COMPILER" = "clang5" ]; then curl -sSL "http://apt.llvm.org/llvm-snapshot.gpg.key" | sudo -E apt-key add - ; fi
    - if [ "$COMPILER" = "clang5" ]; then echo "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main" | sudo tee -a /etc/apt/sources.list > /dev/null ; fi
    - if [ "$COMPILER" = "clang6" ]; then curl -sSL "http://apt.llvm.org/llvm-snapshot.gpg.key" | sudo -E apt-key add - ; fi
    - if [ "$COMPILER" = "clang6" ]; then echo "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main" | sudo tee -a /etc/apt/sources.list > /dev/null ; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test" ; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo -E apt-get -yq update ; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install ${PACKAGES} ; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ls /usr/lib/ccache && sudo -E update-ccache-symlinks && ls /usr/lib/ccache ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install ccache ; brew upgrade python ; fi

script:
    - which g++-5	|| true
    - echo $PATH
    - export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
    - echo $PATH
    - which g++-5	|| true
    - ccache --show-stats > ccache_before
    - python3 make.py -clean -build -unit_test -${COMPILER} -Debug -x86
    - python3 make.py -clean -build -unit_test -${COMPILER} -Release -x86
    - python3 make.py -clean -build -unit_test -${COMPILER} -Debug -x64
    - python3 make.py -clean -build -unit_test -${COMPILER} -Release -x64
    - python3 make.py -clean -build -unit_test -${COMPILER} -Release -x64 -nosimd
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then python3 make.py -clean -build -ios -Debug ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then python3 make.py -clean -build -ios -Release; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then python3 make.py -clean -build -ios -Release -nosimd; fi
    - ccache --show-stats > ccache_after
    - diff -U100 ccache_before ccache_after || true
